// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Software_Foundations_Learning_Programme_.DbContexts;

#nullable disable

namespace Software_Foundations_Learning_Programme_.Migrations
{
    [DbContext(typeof(EvGrantApplicationContext))]
    [Migration("20241220112602_delinkedAddressAndApplications")]
    partial class delinkedAddressAndApplications
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Software_Foundations_Learning_Programme_.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address_line1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Address_line2")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address_line1 = "2 Dummy Lane",
                            Address_line2 = "Fake Town",
                            City = "London",
                            Postcode = "FA12_6KE"
                        },
                        new
                        {
                            Id = 2,
                            Address_line1 = "4 Dummy Lane",
                            Address_line2 = "Fake Town",
                            City = "London",
                            Postcode = "FA12_6KE"
                        },
                        new
                        {
                            Id = 3,
                            Address_line1 = "3 Fake Street",
                            Address_line2 = "Dummy Town",
                            City = "Manchester",
                            Postcode = "NO7_4RL"
                        });
                });

            modelBuilder.Entity("Software_Foundations_Learning_Programme_.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address_line1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Address_line2")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Vrn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Software_Foundations_Learning_Programme_.Entities.Vehicle", b =>
                {
                    b.Property<string>("Vrn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fuel_type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Make")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Year_made")
                        .HasColumnType("INTEGER");

                    b.HasKey("Vrn");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Vrn = "EVS400",
                            Fuel_type = "electric",
                            Make = "Tesla",
                            Model = "Series S",
                            Year_made = 2018
                        },
                        new
                        {
                            Vrn = "CAS300",
                            Fuel_type = "petrol",
                            Make = "Volkswagon",
                            Model = "Fox",
                            Year_made = 2008
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
